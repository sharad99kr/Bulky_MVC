@*model Product (global imports of these are defined in _ViewImports.cshtml)*@
@model ProductVM

<div class="card shadow border-0 my-4">
	<div class="card-header bg-secondary bg-gradient ml-0 py-3">
	<div class="col-12 text-center">
			<h2 class="text-white py-2">@(Model.Product.Id != 0 ? "Update":"Create") product</h2>
	</div>
	</div>

	<div class="card-body p-4">
		<form method="post" class="row" enctype="multipart/form-data">
			<!-- For file upload to work, we need enctype="multipart/form-data-->
			<input asp-for="@Model.Product.Id" hidden/>
@* 			<input asp-for="@Model.Product.ImageUrl" hidden />
 *@			<!-- Since we don't have imageurl in input field, when the form is posted, it is not available in controller. To fix that we have added imageurl as hidden property-->
			<div class="row">
				<div class="col-10">
					<div class="border p-3 ">
						@*<div asp-validation-summary="ModelOnly"></div> *@ <!--displays all validation error in one place. If instead of ALL, we add ModelOnly, the error list will not include property related error messages-->
						<!-- If instead of ALL, we add None, no error will be displayed in global scope-->
						<div class="form-floating py-2 col-12">
							<input asp-for="Product.Title" class="form-control border-0 shadow" />
							<label asp-for="Product.Title" class="ms-2"></label>
							<span asp-validation-for="Product.Title" class="text-bg-danger"></span>
						</div>
						<div class="form-floating py-2 col-12">
							<textarea asp-for="Product.Description" class="form-control border-0 shadow"></textarea>
							<label asp-for="Product.Description" class="ms-2"></label>
						</div>
						<div class="form-floating py-2 col-12">
							<input asp-for="Product.ISBN" class="form-control border-0 shadow" />
							<label asp-for="Product.ISBN" class="ms-2"></label>
							<span asp-validation-for="Product.ISBN" class="text-bg-danger"></span>
						</div>
						<div class="form-floating py-2 col-12">
							<input asp-for="Product.Author" class="form-control border-0 shadow" />
							<label asp-for="Product.Author" class="ms-2"></label>
							<span asp-validation-for="Product.Author" class="text-bg-danger"></span>
						</div>
						<div class="form-floating py-2 col-12">
							<input asp-for="Product.ListPrice" class="form-control border-0 shadow" />
							<label asp-for="Product.ListPrice" class="ms-2"></label>
							<span asp-validation-for="Product.ListPrice" class="text-bg-danger"></span>
						</div>
						<div class="form-floating py-2 col-12">
							<input asp-for="Product.Price" class="form-control border-0 shadow" />
							<label asp-for="Product.Price" class="ms-2"></label>
							<span asp-validation-for="Product.Price" class="text-bg-danger"></span>
						</div>
						<div class="form-floating py-2 col-12">
							<input asp-for="Product.Price50" class="form-control border-0 shadow" />
							<label asp-for="Product.Price50" class="ms-2"></label>
							<span asp-validation-for="Product.Price50" class="text-bg-danger"></span>
						</div>
						<div class="form-floating py-2 col-12">
							<input asp-for="Product.Price100" class="form-control border-0 shadow" />
							<label asp-for="Product.Price100" class="ms-2"></label>
							<span asp-validation-for="Product.Price100" class="text-bg-danger"></span>
						</div>
						<div class="form-floating py-2 col-12">
							<input type="file" name="file" class="form-control border-0 shadow" />
@* 							<label asp-for="Product.ImageUrl" class="ms-2"></label>
 *@						</div>
						<div class="form-floating py-2 col-12">
							@*<select asp-for="CategoryId" asp-items="ViewBag.CategoryList" class="form-select border-0 shadow">*@
							@*<select asp-for="Product.CategoryId" asp-items="@(ViewData["CategoryList"] as IEnumerable<SelectListItem>)" class="form-select border-0 shadow">*@
							<!--If we are trying to access a data and it is not available, we can try @Model in front of the property. See example below-->
							<select asp-for="@Model.Product.CategoryId" asp-items="@Model.CategoryList" class="form-select border-0 shadow">
								<option disabled selected>--Select Category--</option>
							</select>
							<label asp-for="Product.CategoryId" class="ms-2"></label>
							<span asp-validation-for="Product.CategoryId" class="text-bg-danger"></span>
						</div>
						<div class="row pt-2">
							<div class="col-6 col-md-3">
								@if(Model.Product.Id != 0) {
									<button type="submit" class="btn btn-primary form-control">Update</button>
								} else {
									<button type="submit" class="btn btn-primary form-control">Create</button>
								}

							</div>

							<div class="col-6 col-md-3">
								<a asp-controller="Product" asp-action="Index" class="btn btn-outline-primary border form-control">Back to list</a>
							</div>

						</div>

						<!-- <partial name="_ValidationScriptsPartial" />
						we could added partial script view directly in html -->

					</div>
				</div>
				<div class="col-2">
					@* <img src="@Model.Product.ImageUrl" width="100%"
						 style="border-radius:5px; border: 1px solid #ccc; " /> *@
				</div>

			</div>
			
		</form>
	</div>
	
</div>



@section Scripts{
	<script>
		tinymce.init({
			selector: 'textarea',
			plugins: [
				// Core editing features
				'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
				// Your account includes a free trial of TinyMCE premium features
				// Try the most popular premium features until Jul 29, 2025:
				'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown', 'importword', 'exportword', 'exportpdf'
			],
			toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
			tinycomments_mode: 'embedded',
			tinycomments_author: 'Author name',
			mergetags_list: [
				{ value: 'First.Name', title: 'First Name' },
				{ value: 'Email', title: 'Email' },
			],
			ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
		});
	</script>
	@{
		<partial name="_ValidationScriptsPartial" />
		<!-- This is partial js script which is used for client side validation,
		provided by default for client side validation,
		the name should be exactly same as present under shared folder -->
	}
}
